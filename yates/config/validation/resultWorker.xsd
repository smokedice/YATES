<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="resultWorker" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns1="resultWorker">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="xsi.xsd"/>
  <xs:element name="resultWorker">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:output"/>
        <xs:element ref="ns1:customLogFilters"/>
      </xs:sequence>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>Configuration for how to deliver the results</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="output">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:sqlLite"/>
        <xs:element ref="ns1:logFile"/>
        <xs:element ref="ns1:csvFile"/>
        <xs:element ref="ns1:fileSystem"/>
        <xs:element ref="ns1:trmsLoggers"/>
      </xs:sequence>
      <xs:attribute name="location" use="required" type="xs:string"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            Multiple types of output. All of the output data that is recorded can 
            be located within folder configured within the attribute "location"
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fileSystem">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:clear"/>
        <xs:element ref="ns1:archive"/>
      </xs:sequence>
      <xs:attribute name="enabled" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            Log all results to the file system (includes xml result, stdout, stderr, dbus logs, etc).
            These results are structured in the file system so that the top level folder represents the
            test details (name, class, etc). The next level is the unique execution ID (relates to the
            Sqlite database). The unique execution ID is to provide multiple containers for each 
            iteration of the test. Within the execution ID folder all of logs are located.
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="filename" type="xs:NCName">
    <xs:annotation>
        <xs:documentation>Name of the file to record the result within</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="sqlLite">
    <xs:complexType>
      <xs:attribute name="enabled" use="required" type="xs:boolean"/>
      <xs:attribute name="clear" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            Records all the results (but no logs) within a SQLite database.
            If clear is set to true the database will be deleted each time a
            test execution is performed
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="logFile">
    <xs:complexType>
      <xs:attribute name="enabled" use="required" type="xs:boolean"/>
      <xs:attribute name="clear" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            Log all peer state transitions and a minimalistic amount of data for
            each test result within a human readable log file. If clear is set to
            true the log file will be cleared each time a test execution is performed
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="csvFile">
    <xs:complexType>
      <xs:attribute name="enabled" use="required" type="xs:boolean"/>
      <xs:attribute name="clear" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            CSV file including all test results. If clear is set to true
            the CSV file will be wiped each time a test execution is performed
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="trmsLoggers">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:trms"/>
      </xs:sequence>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>Configuration for TRMS Loggers</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="trms">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:url"/>
        <xs:element type="xs:string" name="username" />
        <xs:element type="xs:string" name="password" />
      </xs:sequence>
      <xs:attribute name="enabled" use="required" type="xs:boolean"/>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            TRMS details for uploading results after a test execution has completed
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="url" type="xs:anyURI"/>
  <xs:element name="location">
    <xs:simpleType>
        <xs:restriction base="xs:string">
            <xs:pattern value="(\.|[\.]{0,2}/[a-zA-Z0-9_\-/\.]+)$"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    <xs:annotation>
        <xs:documentation>
            Location of a file on the file system.
            Paths can be relative or static. ./file ../file /root/file
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="clear" type="xs:boolean"/>
  <xs:element name="archive">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="name">
          <xs:simpleType>
              <xs:restriction base="xs:string">
                  <xs:pattern value="[a-zA-Z0-9_\.]+" />
              </xs:restriction>
          </xs:simpleType>
          <xs:annotation>
              <xs:documentation>
                Where to archive the results so that each test 
                execution can be saved for later use.
              </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="format">
          <xs:simpleType>
              <xs:restriction base="xs:string">
                  <xs:enumeration value="zip" />
                  <xs:enumeration value="tar" />
                  <xs:enumeration value="tar.gz" />
                  <xs:enumeration value="tgz" />
              </xs:restriction>
          </xs:simpleType>
          <xs:annotation>
              <xs:documentation>Type of archive to use. zip, tar, tar.gz, tgz</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="ns1:location" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="customLogFilters">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ns1:customLogFilter" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>
            Retrieve a file from the slave after a test execution.
        </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="customLogFilter" type="xs:string"/>
</xs:schema>
